<UserControl
    x:Class="Bee.Modules.Communication.Views.ComUsartDebugger"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converter="clr-namespace:Bee.Core.Converters;assembly=Bee.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:viewModels="clr-namespace:Bee.Modules.Communication.ViewModels"
    d:DataContext="{d:DesignInstance viewModels:ComUsartDebuggerViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    prism:ViewModelLocator.AutoWireViewModel="True"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>

                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.groupbox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.textbox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.textblock.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.combobox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.listbox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.richtextbox.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <d:SolidColorBrush x:Key="PrimaryHueMidBrush" Color="#212121" />
            <d:SolidColorBrush x:Key="PrimaryHueLightBrush" Color="#3949ab" />
            <DataTemplate x:Key="Item">
                <Grid>
                    <StackPanel Orientation="Horizontal" Visibility="{Binding IsStandard, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <TextBlock Margin="0,5" Text="{Binding Num}" />
                        <TextBlock Margin="5" Text="{Binding Unit}" />
                    </StackPanel>


                    <TextBox
                        Margin="5,5,30,5"
                        materialDesign:HintAssist.Hint="自定义数值"
                        materialDesign:TextFieldAssist.DecorationVisibility="Hidden"
                        materialDesign:TextFieldAssist.SuffixText="{Binding Unit}"
                        BorderThickness="0"
                        Text="{Binding Num}"
                        Visibility="{Binding IsStandard, Converter={StaticResource InverseBoolToVisConverter}}" />
                </Grid>
            </DataTemplate>
            <converter:EnumToBoolConverter x:Key="SpecificEnum" />
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.3*" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <DockPanel>
            <GroupBox
                Margin="5"
                materialDesign:ColorZoneAssist.Mode="SecondaryMid"
                DockPanel.Dock="Top"
                Header="串口设置">
                <DockPanel>
                    <DockPanel DockPanel.Dock="Top" IsEnabled="{Binding CanOpenState}">
                        <ComboBox
                            Margin="5"
                            materialDesign:HintAssist.Hint="串口选择"
                            DockPanel.Dock="Top"
                            ItemsSource="{Binding ComNames}"
                            SelectedItem="{Binding SelectedCom}"
                            Style="{StaticResource MaterialDesignFloatingHintComboBox}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="DropDownOpened">
                                    <prism:InvokeCommandAction Command="{Binding RefreshPortCommand}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ComboBox>
                        <ComboBox
                            Margin="5"
                            materialDesign:HintAssist.Hint="波特率"
                            DockPanel.Dock="Top"
                            ItemTemplate="{StaticResource Item}"
                            ItemsSource="{Binding BaudRates}"
                            SelectedItem="{Binding SelectedBaudRate}"
                            Style="{StaticResource MaterialDesignFloatingHintComboBox}" />
                        <ComboBox
                            Margin="5"
                            materialDesign:HintAssist.Hint="停止位"
                            DockPanel.Dock="Top"
                            ItemsSource="{Binding StopBits}"
                            SelectedItem="{Binding SelectedStopBit}"
                            Style="{StaticResource MaterialDesignFloatingHintComboBox}" />
                        <ComboBox
                            Margin="5"
                            materialDesign:HintAssist.Hint="数据位"
                            DockPanel.Dock="Top"
                            ItemTemplate="{StaticResource Item}"
                            ItemsSource="{Binding DataBits}"
                            SelectedItem="{Binding SelectedDataBit}"
                            Style="{StaticResource MaterialDesignFloatingHintComboBox}" />
                        <ComboBox
                            Margin="5"
                            materialDesign:HintAssist.Hint="校验位"
                            DockPanel.Dock="Top"
                            ItemsSource="{Binding Parities}"
                            SelectedItem="{Binding SelectedParity}"
                            Style="{StaticResource MaterialDesignFloatingHintComboBox}" />

                    </DockPanel>
                    <Grid>
                        <Button
                            Margin="5"
                            HorizontalAlignment="Right"
                            Background="CornflowerBlue"
                            Command="{Binding OpenCommand}"
                            Cursor="Hand"
                            Visibility="{Binding CanOpenState, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon
                                    Width="20"
                                    Height="20"
                                    Margin="2,0"
                                    Kind="Connection" />
                                <TextBlock>打开</TextBlock>
                            </StackPanel>
                        </Button>
                        <Button
                            Margin="5"
                            HorizontalAlignment="Right"
                            Background="CornflowerBlue"
                            Command="{Binding CloseCommand}"
                            Cursor="Hand"
                            Visibility="{Binding CanOpenState, Converter={StaticResource InverseBoolToVisConverter}}">
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon
                                    Width="20"
                                    Height="20"
                                    Margin="2,0"
                                    Kind="Connection" />
                                <TextBlock>关闭</TextBlock>
                            </StackPanel>
                        </Button>
                    </Grid>
                </DockPanel>
            </GroupBox>
            <GroupBox
                Margin="5"
                materialDesign:ColorZoneAssist.Mode="SecondaryMid"
                DockPanel.Dock="Top"
                Header="接收设置">
                <DockPanel>
                    <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                        <RadioButton
                            Margin="5"
                            Content="Ascii"
                            IsChecked="{Binding SendFrameFormat, Converter={StaticResource SpecificEnum}, ConverterParameter=Ascii}"
                            Style="{StaticResource MaterialDesignDarkRadioButton}" />
                        <RadioButton
                            Margin="5"
                            Content="Hex"
                            IsChecked="{Binding SendFrameFormat, Converter={StaticResource SpecificEnum}, ConverterParameter=Hex}"
                            Style="{StaticResource MaterialDesignDarkRadioButton}" />
                    </StackPanel>
                    <CheckBox
                        Margin="5"
                        VerticalAlignment="Center"
                        Content="日志模式显示"
                        DockPanel.Dock="Top"
                        IsChecked="{Binding IsOutputAsLog}" />
                </DockPanel>
            </GroupBox>
            <GroupBox
                Margin="5"
                materialDesign:ColorZoneAssist.Mode="SecondaryMid"
                DockPanel.Dock="Top"
                Header="发送设置">
                <DockPanel LastChildFill="False">
                    <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                        <RadioButton
                            Margin="5"
                            Content="Ascii"
                            DockPanel.Dock="Top"
                            IsChecked="{Binding ReceiveFrameFormat, Converter={StaticResource SpecificEnum}, ConverterParameter=Ascii}"
                            Style="{StaticResource MaterialDesignDarkRadioButton}" />
                        <RadioButton
                            x:Name="SendHexCheckBtn"
                            Margin="5"
                            Content="Hex"
                            DockPanel.Dock="Top"
                            IsChecked="{Binding ReceiveFrameFormat, Converter={StaticResource SpecificEnum}, ConverterParameter=Hex}"
                            Style="{StaticResource MaterialDesignDarkRadioButton}" />
                        <CheckBox
                            Margin="5"
                            Content="发送新行"
                            DockPanel.Dock="Top"
                            IsChecked="{Binding IsAddNewLineWhenSend}" />
                    </StackPanel>
                    <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                        <CheckBox
                            Margin="5"
                            VerticalAlignment="Center"
                            Content="定时发送"
                            DockPanel.Dock="Top"
                            IsChecked="{Binding IsSendAtRegularTime}" />
                        <TextBox
                            Width="100"
                            Margin="5"
                            VerticalAlignment="Center"
                            materialDesign:HintAssist.Hint="周期: "
                            materialDesign:TextFieldAssist.SuffixText="ms"
                            Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                            Text="{Binding SendCycleTime}" />
                    </StackPanel>
                </DockPanel>
            </GroupBox>

        </DockPanel>
        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="0.4*" />
            </Grid.RowDefinitions>
            <GroupBox
                Margin="5"
                materialDesign:ColorZoneAssist.Mode="SecondaryMid"
                DockPanel.Dock="Top">
                <GroupBox.Header>

                    <DockPanel LastChildFill="False">
                        <TextBlock
                            VerticalAlignment="Center"
                            DockPanel.Dock="Left"
                            Foreground="White"
                            Text="接收数据区" />

                        <Button
                            Margin="20,5"
                            Command="{Binding EmptyReceivedCommand}"
                            DockPanel.Dock="Right"
                            Foreground="White"
                            Style="{StaticResource MaterialDesignToolForegroundButton}">
                            <materialDesign:PackIcon
                                Width="25"
                                Height="25"
                                Kind="DeleteSweep" />
                        </Button>
                    </DockPanel>
                </GroupBox.Header>
                <DockPanel>
                    <RichTextBox
                        x:Name="ReceiveRichTextBox"
                        materialDesign:TextFieldAssist.DecorationVisibility="Hidden"
                        BorderThickness="0"
                        FontSize="15"
                        IsReadOnly="True"
                        VerticalScrollBarVisibility="Auto" />
                </DockPanel>
            </GroupBox>
            <GroupBox
                Grid.Row="1"
                Margin="5"
                materialDesign:ColorZoneAssist.Mode="SecondaryMid"
                DockPanel.Dock="Top">
                <GroupBox.Header>

                    <DockPanel LastChildFill="False">
                        <TextBlock
                            VerticalAlignment="Center"
                            DockPanel.Dock="Left"
                            Foreground="White"
                            Text="发送数据区" />

                        <Button
                            Margin="5"
                            Command="{Binding SendCommand}"
                            DockPanel.Dock="Right"
                            Foreground="White"
                            Style="{StaticResource MaterialDesignToolForegroundButton}">
                            <materialDesign:PackIcon
                                Width="25"
                                Height="25"
                                Kind="Send" />
                        </Button>
                        <Button
                            Margin="20,5"
                            Command="{Binding EmptyInputCommand}"
                            DockPanel.Dock="Right"
                            Foreground="White"
                            Style="{StaticResource MaterialDesignToolForegroundButton}">
                            <materialDesign:PackIcon
                                Width="25"
                                Height="25"
                                Kind="DeleteSweep" />
                        </Button>
                    </DockPanel>
                </GroupBox.Header>
                <DockPanel>
                    <TextBox
                        x:Name="SendRichTextBox"
                        materialDesign:HintAssist.Hint="输入十六进制时,两数之间插入空格"
                        materialDesign:TextFieldAssist.DecorationVisibility="Hidden"
                        BorderThickness="0"
                        FontSize="15"
                        Text="{Binding InputData}"
                        VerticalScrollBarVisibility="Auto" />
                </DockPanel>
            </GroupBox>
        </Grid>
    </Grid>
</UserControl>
