<Window
    x:Class="Bee.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:attachProperties="clr-namespace:Polaris.MaterialDesignWindow.WPF.AttachProperties;assembly=Polaris.MaterialDesignWindow.WPF"
    xmlns:core="clr-namespace:Bee.Core;assembly=Bee.Core"
    xmlns:local="clr-namespace:Bee.Views"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:moduleExtension="clr-namespace:Bee.Core.ModuleExtension;assembly=Bee.Core"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:resources="clr-namespace:Polaris.MaterialDesignWindow.WPF.Resources;assembly=Polaris.MaterialDesignWindow.WPF"
    xmlns:system="clr-namespace:System;assembly=System.Runtime"
    Title="{Binding Title}"
    attachProperties:WindowEx.ShowMaximizeButton="True"
    attachProperties:WindowEx.ShowMinimizeButton="True"
    prism:ViewModelLocator.AutoWireViewModel="True"
    Background="{DynamicResource MaterialDesignPaper}"
    Style="{StaticResource MaterialDesignWindow}"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    WindowStartupLocation="CenterScreen"
    WindowState="Maximized">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>

                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Polaris.Controls.WPF;Component/Themes/Polaris.Theme.ListBox.xaml" />
                <!--<ResourceDictionary Source="pack://application:,,,/Polaris.Controls.WPF;Component/Themes/Polaris.Theme.MessageBar.xaml"/>-->
            </ResourceDictionary.MergedDictionaries>
            <Style
                x:Key="TabItemRegionStyle"
                BasedOn="{StaticResource MaterialDesignNavigationRailTabItem}"
                TargetType="{x:Type TabItem}">
                <Setter Property="Header" Value="{Binding DataContext.ShellHeader}">
                    <!--<Setter.Value>

                    -->
                    <!--<StackPanel>
                            <materialDesign:PackIcon
                                Width="24"
                                Height="24"
                                HorizontalAlignment="Center"
                                Kind="{Binding DataContext.ShellIcon}" />
                            <TextBlock
                                HorizontalAlignment="Center"
                                Text="{Binding DataContext.ShellHeader}" />
                        </StackPanel>-->
                    <!--
                    </Setter.Value>-->
                </Setter>
            </Style>




        </ResourceDictionary>
    </Window.Resources>
    <resources:MaterialDesignWindow.HeaderContent>
     
        <DockPanel LastChildFill="False">
            <DockPanel.Resources>
                <Style
                    x:Key="OperateBtn"
                    BasedOn="{StaticResource MaterialDesignRaisedDarkButton}"
                    TargetType="Button">
                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}" />
                    <!--  FOR: ripple effect  -->
                    <Setter Property="materialDesign:RippleAssist.Feedback" Value="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}" />
                </Style>
            </DockPanel.Resources>
            <!--
                ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}" HorizontalAlignment="Left" WindowChrome.IsHitTestVisibleInChrome="True"
                x:Name="MenuToggleButton" /
            -->

            <Image
               Source="Bee;component/Resources/newyear.jpg"
               Width="45"
               Height="45"
               HorizontalAlignment="Left"
               VerticalAlignment="Center"
               DockPanel.Dock="Left"/>
            <TextBlock
                Name="TitleTbx"
                Margin="16,0,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                FontSize="35"
                MouseEnter="TitleTbx_OnMouseEnter"
                MouseLeave="TitleTbx_OnMouseLeave"
                Text="{Binding Title}" />

            <TextBlock
                Name="AuthorTbx"
                Margin="16,0,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                FontSize="35"
                Foreground="{DynamicResource SecondaryHueMidBrush}"
                Text="{Binding Author}"
                Visibility="Hidden" />
            <Border
                Width="2"
                Margin="15,0"
                BorderBrush="{Binding ElementName=TitleTbx, Path=Foreground}"
                BorderThickness="1,0,1,0"
                Visibility="{Binding ElementName=OpStackPanel, Path=Visibility}" />
            <StackPanel
                Name="OpStackPanel"
                Margin="5"
                Visibility="Hidden">
                <Button materialDesign:ButtonProgressAssist.IsIndeterminate="True" Content="{materialDesign:PackIcon Kind=LanConnect, Size=24}" />
            </StackPanel>
        </DockPanel>
    </resources:MaterialDesignWindow.HeaderContent>

    <materialDesign:Transitioner x:Name="SwitchContentTransitioner">
        <!--<local:InitPage x:Name="InitPage" />-->
        <materialDesign:TransitionerSlide OpeningEffect="{materialDesign:TransitionEffect SlideInFromRight, Duration=0:0:1.2}">
            <!--<materialDesign:TransitionerSlide.OpeningEffects>
                <materialDesign:TransitionEffect
                    Kind="SlideInFromLeft"
                    Duration="0:0:0.8" />
                <materialDesign:TransitionEffect
                    Kind="SlideInFromBottom"
                    OffsetTime="0:0:0.15"
                    Duration="0:0:0.8" />
            </materialDesign:TransitionerSlide.OpeningEffects>-->
            <materialDesign:DialogHost
                DialogContentUniformCornerRadius="20"
                Identifier="{x:Static core:RegionNames.ContentRegion}"
                SnackbarMessageQueue="{Binding ElementName=MainSnackBar, Path=MessageQueue}">
                <DockPanel>
                    <materialDesign:Card Margin="5" materialDesign:ElevationAssist.Elevation="Dp2">
                        <DockPanel>
                            <Border BorderBrush="{DynamicResource MaterialDesignDivider}" BorderThickness="0,0,1,0">
                                <ListBox
                                    ItemsSource="{Binding ModuleItems}"
                                    SelectedItem="{Binding SelectedModuleItem}"
                                    Style="{StaticResource PolarisTheme.VerticalNavigationListBox}">
                                    <ListBox.Resources>
                                        <DataTemplate DataType="{x:Type moduleExtension:ModuleNavigateTab}">
                                            <StackPanel Orientation="Horizontal">
                                                <materialDesign:PackIcon
                                                    Margin="0,0,8,0"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Kind="{Binding Icon}" />
                                                <TextBlock Text="{Binding Name}" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </ListBox.Resources>
                                </ListBox>
                            </Border>
                            <Grid>
                                <ContentControl prism:RegionManager.RegionName="{x:Static core:RegionNames.ContentRegion}" />
                                <!--  this is a  notice Bar  -->
                                <materialDesign:Snackbar Name="MainSnackBar" MessageQueue="{Binding MainSnackbarMessageQueue}" />
                            </Grid>
                        </DockPanel>
                    </materialDesign:Card>
                </DockPanel>
            </materialDesign:DialogHost>
        </materialDesign:TransitionerSlide>
    </materialDesign:Transitioner>





</Window>
