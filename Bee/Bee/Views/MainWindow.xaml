<Window x:Class="Bee.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:core="clr-namespace:Bee.Core;assembly=Bee.Core"
        
        xmlns:resources="clr-namespace:Polaris.MaterialDesignWindow.WPF.Resources;assembly=Polaris.MaterialDesignWindow.WPF"
        xmlns:attachProperties="clr-namespace:Polaris.MaterialDesignWindow.WPF.AttachProperties;assembly=Polaris.MaterialDesignWindow.WPF"
        Style="{StaticResource MaterialDesignWindow}"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}"
        attachProperties:WindowEx.ShowMaximizeButton="True"               
        attachProperties:WindowEx.ShowMinimizeButton="True"
        Title="{Binding Title}"
        prism:ViewModelLocator.AutoWireViewModel="True"
        >
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
            
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <resources:MaterialDesignWindow.HeaderContent>
        <DockPanel LastChildFill="False">
            <DockPanel.Resources>
                <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedDarkButton}" x:Key="OperateBtn">
                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}" />
                    <!-- FOR: ripple effect -->
                    <Setter Property="materialDesign:RippleAssist.Feedback" Value="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"/>
                </Style>
            </DockPanel.Resources>
            <!--ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}" HorizontalAlignment="Left" WindowChrome.IsHitTestVisibleInChrome="True" 
x:Name="MenuToggleButton" /-->
            <TextBlock Text="{Binding Title, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" VerticalAlignment="Center" HorizontalAlignment="Left" 
                       Margin="16 0 0 0" FontSize="35"
                       Foreground="{StaticResource FileBrush}"/>
            <Button
                Margin="16,0,0,0"
                Command="{Binding ConnectCommand}"
                materialDesign:ButtonProgressAssist.IsIndeterminate="True"
                materialDesign:ButtonProgressAssist.IsIndicatorVisible="{Binding IsConnecting}"
                Visibility="Collapsed"
                Content="{materialDesign:PackIcon Kind=LanConnect, Size=24}"
            >

            </Button>
        </DockPanel>
    </resources:MaterialDesignWindow.HeaderContent>
    <Grid>
       
        <ContentControl  prism:RegionManager.RegionName="{x:Static core:RegionNames.ContentRegion}"/>
    </Grid>
</Window>
